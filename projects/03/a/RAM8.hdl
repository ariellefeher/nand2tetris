// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in = load , sel = address, a = dmuxA, b = dmuxB, c = dmuxC , d = dmuxD, e = dmuxE, f = dmuxF, g = dmuxG, h = dmuxH);

     Register( in = in, load = dmuxA, out = reg1);
     Register( in = in, load = dmuxB, out = reg2);
     Register( in = in, load = dmuxC, out = reg3);
     Register( in = in, load = dmuxD, out = reg4);
     Register( in = in, load = dmuxE, out = reg5);
     Register( in = in, load = dmuxF, out = reg6);
     Register( in = in, load = dmuxG, out = reg7);
     Register( in = in, load = dmuxH, out = reg8);

   Mux8Way16(a = reg1, b = reg2 ,c = reg3, d = reg4, e = reg5, f = reg6, g = reg7, h = reg8, sel = address, out = out);
}

//Dmux
// {a,b} = {in,0} if sel == 0
//         {0,in} if sel == 1
