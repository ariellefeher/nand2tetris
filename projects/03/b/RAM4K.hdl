// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    DMux8Way(in = load , sel = address[0..2], a = ramPartA, b = ramPartB, c = ramPartC , d = ramPartD, e = ramPartE, f = ramPartF, g = ramPartG, h = ramPartH);

     RAM512(in = in, load = ramPartA, address = address[3..11] , out = ram1);
     RAM512( in = in, load = ramPartB,  address = address[3..11] , out = ram2);
     RAM512( in = in, load = ramPartC, address = address[3..11] , out = ram3);
     RAM512( in = in, load = ramPartD,  address = address[3..11] , out = ram4);
     RAM512( in = in, load = ramPartE,  address = address[3..11] , out = ram5);
     RAM512( in = in, load = ramPartF,  address = address[3..11] , out = ram6);
     RAM512( in = in, load = ramPartG,  address = address[3..11] , out = ram7);
     RAM512(in = in, load = ramPartH,  address = address[3..11] , out = ram08);

   Mux8Way16(a = ram1, b = ram2 ,c = ram3, d = ram4, e = ram5, f = ram6, g = ram7, h = ram08, sel = address[0..2], out = out);
}
