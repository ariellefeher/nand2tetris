// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    DMux4Way(in = load , sel = address[13..14], a = RAMLoad1, b = RAMLoad2, c = screenLoad, d = keyboardLoad);

//if(address[15] >= 0 && address <= 16383) - if address starts with 00 or 01 -> load input into RAM16K
    Or(a = RAMLoad1 , b =RAMLoad2, out = loadRAM); //checking if 00 or 01 as input

    RAM16K(in = in, load = loadRAM, address = address[0..13], out = ramMemory); //loading the input into memory 

//else if(address >= 16384 && address <= 24575) -> if address starts with 10 -> load input into Screen
    Screen(in = in , load = screenLoad, address = address[0..12], out = screenMemory);

//else if (address == 24576) -> if address starts wtih 11 -> load input into Keyboard 
    Keyboard(out = keyboardMemory);

//**2. Read **//
    Mux4Way16(a = ramMemory, b = ramMemory, c = screenMemory, d = keyboardMemory, sel = address[13..14], out = out);
   
}